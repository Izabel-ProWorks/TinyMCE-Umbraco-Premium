{"version":3,"file":"tinymce-mentions-plugin.js","sources":["../../../src/tinymce-mentions-plugin/metions-request-factory.ts","../../../src/tinymce-mentions-plugin/mentions.tinymce-api.ts"],"sourcesContent":["export async function createMentionsRequest(): Promise<(request: any, respondWith: any) => void> {\r\n\r\n\treturn (request: any, respondWith: any) => {\r\n\r\n        // Fetch your full user list from the server and cache locally\r\n        const users = [\r\n            {\r\n                id: \"1\",\r\n                name: 'John Smith'\r\n            },\r\n            {\r\n                id: \"2\",\r\n                name: 'Joe Cool'\r\n            },\r\n            {\r\n                id: \"3\",\r\n                name: 'Zander Geulph'\r\n            }\r\n\r\n        ];\r\n\r\n        // query.term is the text the user typed after the '@'\r\n        var filteredUsers = users.filter(user =>\r\n            user.name.toLowerCase().includes(request.term.toLowerCase())\r\n        );\r\n\r\n        filteredUsers = filteredUsers.slice(0, 10);\r\n\r\n        // Where the user object must contain the properties `id` and `name`\r\n        // but you could additionally include anything else you deem useful.\r\n        respondWith(filteredUsers);\r\n\t};\r\n}\r\n","import { UmbTinyMcePluginBase } from '@tiny-mce-umbraco/backoffice/core';\r\nimport type { TinyMcePluginArguments } from '@tiny-mce-umbraco/backoffice/core';\r\nimport type { Editor } from '@tiny-mce-umbraco/backoffice/external/tinymce';\r\nimport type { UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\nimport { createMentionsRequest } from './metions-request-factory';\r\n\r\nexport default class TinyMceMentionsExtensionApi extends UmbTinyMcePluginBase {\r\n\treadonly #editor: Editor;\r\n\treadonly #configuration: UmbPropertyEditorConfigCollection | undefined;\r\n\r\n\tconstructor(args: TinyMcePluginArguments) {\r\n\t\tsuper(args);\r\n\t\tconsole.log(\"mentions-assitant initialized\");\r\n\r\n\t\tthis.#editor = args.editor;\r\n\t\tthis.#configuration = args.host.configuration;\r\n\r\n\t\tif (this.#editor) {\r\n\t\t\tconsole.log(\"mentions-assitant this.#editor\", [this.#editor]);\r\n\t\t}\r\n\t\tif (this.#configuration) {\r\n\t\t\tconsole.log(\"mentions-assitant this.#configuration\", [this.#configuration]);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic override async extendEditorConfig(_config: any): Promise<void> {\r\n\t\tconsole.log(\"mentions-assitant extendEditorConfig 1\", [_config]);\r\n\t\t_config.mentions_fetch = await createMentionsRequest(); // or a function that returns the request handler\r\n\t\tconsole.log(\"mentions-assitant extendEditorConfig 2\", [_config]);\r\n\t}\r\n\r\n\toverride async init(): Promise<void> {\r\n\t\tconsole.log(\"mentions-assitant init 1\");\r\n\t\t//console.log(\"mentions-assitant init 2\");\r\n\t}\r\n}\r\n"],"names":["createMentionsRequest","request","respondWith","filteredUsers","user","TinyMceMentionsExtensionApi","UmbTinyMcePluginBase","args","__privateAdd","_editor","_configuration","__privateSet","__privateGet","_config"],"mappings":";;;;;;AAAA,eAAsBA,IAA2E;AAEzF,SAAA,CAACC,GAAcC,MAAqB;AAoBpC,QAAIC,IAjBU;AAAA,MACV;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,IAAI;AAAA,QACJ,MAAM;AAAA,MAAA;AAAA,IAGd,EAG0B;AAAA,MAAO,CAAAC,MAC7BA,EAAK,KAAK,cAAc,SAASH,EAAQ,KAAK,YAAa,CAAA;AAAA,IAC/D;AAEgB,IAAAE,IAAAA,EAAc,MAAM,GAAG,EAAE,GAIzCD,EAAYC,CAAa;AAAA,EAChC;AACD;;AC1BA,MAAqBE,UAAoCC,EAAqB;AAAA,EAI7E,YAAYC,GAA8B;AACzC,UAAMA,CAAI;AAJF,IAAAC,EAAA,MAAAC;AACA,IAAAD,EAAA,MAAAE;AAIR,YAAQ,IAAI,+BAA+B,GAE3CC,EAAA,MAAKF,GAAUF,EAAK,SACfI,EAAA,MAAAD,GAAiBH,EAAK,KAAK,gBAE5BK,EAAA,MAAKH,MACR,QAAQ,IAAI,kCAAkC,CAACG,EAAA,MAAKH,EAAO,CAAC,GAEzDG,EAAA,MAAKF,MACR,QAAQ,IAAI,yCAAyC,CAACE,EAAA,MAAKF,EAAc,CAAC;AAAA,EAC3E;AAAA,EAGD,aAAsB,mBAAmBG,GAA6B;AACrE,YAAQ,IAAI,0CAA0C,CAACA,CAAO,CAAC,GACvDA,EAAA,iBAAiB,MAAMb,EAAsB,GACrD,QAAQ,IAAI,0CAA0C,CAACa,CAAO,CAAC;AAAA,EAAA;AAAA,EAGhE,MAAe,OAAsB;AACpC,YAAQ,IAAI,0BAA0B;AAAA,EAAA;AAGxC;AA5BUJ,IAAA,eACAC,IAAA;"}